{"name":"Label factory","tagline":"A pdf label maker written in Ruby","body":"# LabelFactory\r\n[![Gem Version](https://badge.fury.io/rb/label_factory.png)](https://rubygems.org/gems/label_factory)[![Code Climate](https://codeclimate.com/github/eventioz/label_factory.png)](https://codeclimate.com/github/eventioz/label_factory)[![Dependency Status](https://gemnasium.com/eventioz/label_factory.png)](https://gemnasium.com/eventioz/label_factory)\r\n\r\ncreate pdf labels with pure ruby\r\n\r\nyou can load your templates in [Glabels](http://www.glabels.org/) format or use the ones that we have already included\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'label_factory'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install label_factory\r\n\r\n## Usage\r\n\r\nthis example is taken from tests suit:\r\n\r\n``` ruby\r\n    p = LabelFactory::Batch::Base.new(\"Avery 8160\") # label is 2 x 10\r\n    p.draw_boxes(false, true)\r\n    p.add_label(\"&*\\%Positoin 15\", position: 15) # should add col 2, row 1\r\n    p.add_label('With Margin', use_margin: true, position: 4)\r\n    p.add_label('No Margin', position: 5, use_margin: false)\r\n    p.add_label('This is the song that never ends, yes it goes on and on my friends', position: 7 )\r\n    p.add_label('X Offset = 4, Y Offset = -6', position: 9,  offset_x: 4, offset_y: -6)\r\n    p.add_label('Centered', position: 26, justification: :center) # should add col 2, row 15\r\n    p.add_label('[Right justified]', justification: :right, position: 28) # col 2, row 14, right justified.\r\n    p.add_label('col 2 row 15', position: 29) # should add col 2, row 15\r\n    p.add_label('This was added first and has a BIG font', position: 8,  font_size: 16)\r\n    p.add_label('This was added last and has a small font', position: 8, font_size: 8, offset_y: -40)\r\n    p.save_as('labels.pdf')\r\n```\r\n\r\nor multiple lines and fonts per line in a single label!\r\n\r\n``` ruby\r\n    pdf = LabelFactory::Batch::Base.new('Avery 8160')\r\n    pdf.draw_boxes(false, false)\r\n    contents = [];\r\n    contents << {text: 'This', justification: :center, font_size: 8, font_type: 'Courier'}\r\n    contents << {text: 'Is a', justification: :right, font_size: 8, font_type: 'Helvetica-BoldOblique'}\r\n    contents << {text: 'Test', font_type: 'Times-Roman'}\r\n    5.times do |i|\r\n      pdf.add_multiline_label(contents,i)\r\n    end\r\n\r\n    pdf.save_as('other_labels.pdf')\r\n```\r\n\r\n## Credits\r\n\r\nthis gem is inspirated in [PDF-labels](http://rubyforge.org/projects/pdf-labels/)\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}